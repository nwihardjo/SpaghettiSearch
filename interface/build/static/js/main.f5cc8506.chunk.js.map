{"version":3,"sources":["config/server.js","components/Keywords.js","components/ResultCard.js","components/Results.js","utils/history.js","containers/ResultsContainer.js","containers/Main.js","containers/WordList.js","App.js","serviceWorker.js","index.js"],"names":["address","process","PORT","module","exports","Keywords","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","word","freq","setState","react_default","a","createElement","className","Component","ResultCard","require","renderParent","Parents","length","map","link","i","href","renderChildren","Children","renderSummary","summaryArr","idxs","Term","idx","Summary","toLowerCase","indexOf","push","sortedIdxs","sort","b","x","slice","Number","Url","Page_title","Mod_date","Date","Page_size","Words_mapping","PageRank","FinalRank","date","data","match","terms","Card","CardBody","CardLink","Math","round","CardSubtitle","entries","entry","components_Keywords","CardText","config","axios","Results","getResults","query","results","method","url","Query","headers","Content-Type","then","response","filtered","filter","el","oldQuery","phrases","pLen","replace","tokens","split","t","trim","console","log","catch","error","_this2","components_ResultCard","createBrowserHistory","ResultsContainer","handleChange","ev","target","value","preventDefault","resultsElement","current","React","createRef","history","location","Navbar","color","light","sticky","NavbarBrand","Nav","navbar","Form","onSubmit","Input","id","type","placeholder","defaultValue","onChange","components_Results","ref","Main","handleSearch","showResults","containers_ResultsContainer","bsSize","Button","outline","WordList","handleSubmit","termList","join","document","reload","maxRow","maxCol","paginationWinSize","currPage","currPageD","currPre","currO","get","res","temp","pre","term","includes","concat","children","j","thisElement","Col","key","onClick","addTermList","bind","Row","page","newD","inner","total","ceil","PaginationItem","active","PaginationLink","updateCurrPageD","start","floor","end","Pagination","aria-label","style","justifyContent","disabled","first","previous","next","last","preList","items","block","updateCurrData","getCurrPageArr","Container","getPagination","App","react_router_dom","react_router","path","exact","component","withRouter","Boolean","window","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5cc8506.chunk.js","sourcesContent":["const PORT = process.env.PORT || 8080;\nconst HOST = '0.0.0.0' || 'localhost';\nlet address = \"http://\" + HOST + \":\" + PORT + \"/\";\n\nmodule.exports = {address: address};\n","import React, { Component } from 'react';\nimport {Card, CardText} from 'reactstrap';\n\nimport '../styles/Keywords.css';\n\nclass Keywords extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {word: \"\", freq: 0}\n  }\n  componentDidMount (props) {\n    this.setState({word: this.props.word, freq: this.props.freq});\n  }\n  render() {\n    return (\n      <div className='word'>\n          {this.state.word} <span>&#8729;</span> {this.state.freq}\n      </div>\n    );\n  }\n}\n\nexport default Keywords;\n","import React, { Component } from 'react';\nimport {Card, CardText, CardBody, CardSubtitle, CardLink} from 'reactstrap';\nimport Keywords from './Keywords';\nimport '../styles/ResultCard.css';\nconst config = require('../config/server');\nconst axios = require('axios');\n\nclass ResultCard extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {Url: \"\",\n    Page_title: \"\",\n    Mod_date: Date(),\n    Page_size: 0,\n    Children:[],\n    Parents: [],\n    Words_mapping:{},\n    PageRank: 0,\n    FinalRank: 0,\n    Summary: \"\",\n\t\tTerm: [],}\n  }\n  componentDidMount (props) {\n    // extract only the date\n    var date=this.props.data['Mod_date'].match(/(\\d{4})-(\\d{2})-(\\d{2})/)\n    this.setState({Url: this.props.data['Url'],\n                  Mod_date: date[0],\n                  Page_title: this.props.data['Page_title'],\n                  Page_size: this.props.data['Page_size'],\n                  Children: ((this.props.data['Children']!=null) ? this.props.data['Children']: []),\n                  Parents: ((this.props.data['Parents']!=null) ? this.props.data['Parents']: []),\n                  Words_mapping: ((this.props.data['Words_mapping']!=null)?this.props.data['Words_mapping']:{}),\n                  PageRank: this.props.data['PageRank'],\n                  FinalRank: this.props.data['FinalRank'],\n                  Summary: this.props.data['Summary'],\n\t\t\t\t\t\t\t\t\tTerm: this.props.terms});\n  }\n  renderParent = () => {\n    if(this.state.Parents.length > 0) {\n      return(\n        <div>\n        <b> Parents: </b>\n        {\n          this.state.Parents.map((link, i) => {\n            return(<a href={link}>Parent{i+1} {'   '}</a>)\n          })\n        }\n        </div>\n      )\n    } else {\n      return <div></div>;\n    }\n  }\n  renderChildren = () => {\n    if(this.state.Children.length > 0) {\n      return(\n        <div>\n        <b> Children: </b>\n        {\n          this.state.Children.map((link, i) => {\n            return(<a href={link}>Child{i+1} {'   '}</a>)\n          })\n        }\n        </div>\n      )\n    } else {\n      return <div></div>;\n    }\n  }\n\trenderSummary = () => {\n\t\tvar summaryArr = [];\n\t\tlet idxs = [];\n\t\tfor(let i in this.state.Term) {\n\t\t\tlet idx = this.state.Summary.toLowerCase().indexOf(this.state.Term[i].toLowerCase());\n\t\t\tif(idx !== -1) {\n\t\t\t\tidxs.push([i, idx]);\n\t\t\t}\n\t\t}\n\t\tif(idxs.length === 0) {\n\t\t\treturn <div>{this.state.Summary}</div>;\n\t\t} else {\n\t\t\tlet sortedIdxs = idxs.sort(function(a, b) {\n\t\t\t\treturn a[1] - b[1];\n\t\t\t});\n\t\t\tsummaryArr.push(<span>{this.state.Summary.slice(0, sortedIdxs[0][1])}</span>);\n\t\t\tfor(let x in sortedIdxs) {\n\t\t\t\t\t\tsummaryArr.push(<b>{this.state.Summary.slice(sortedIdxs[x][1],\n\t\t\t\t\t\t\tsortedIdxs[x][1]+this.state.Term[sortedIdxs[x][0]].length)}</b>);\n\t\t\t\t\t\tif(sortedIdxs.length - 1 === Number(x)) {\n\t\t\t\t\t\t\tsummaryArr.push(<span>{this.state.Summary.slice(sortedIdxs[x][1]+this.state.Term[sortedIdxs[x][0]].length)}</span>);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsummaryArr.push(<span>{this.state.Summary.slice(sortedIdxs[x][1]+this.state.Term[sortedIdxs[x][0]].length, sortedIdxs[Number(x)+1][1])}</span>);\n\t\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn summaryArr;\n\t}\n  render() {\n    return (\n      <a className='card-link--nostyle' href={this.state.Url}>\n      <Card className='custom'>\n        <CardBody>\n          <CardLink className='title' href={this.state.Url}> {this.state.Page_title} </CardLink>\n          <small className=\"text-muted\"><span>&#8729;</span> {Math.round(this.state.FinalRank*100)/100}%</small>\n          <CardSubtitle><CardLink className='subtitle' href={this.state.Url}> {this.state.Url} </CardLink></CardSubtitle>\n          <div className='row'>\n          {Object.entries(this.state.Words_mapping).sort((a, b) => {\n\t\t\t\t\t\treturn b[1] - a[1] }).map((entry) => {\n            return(<Keywords word={entry[0]} freq={entry[1]} />)\n          })}</div>\n        </CardBody>\n        <CardBody>\n          <CardText>\n          {this.renderSummary()} <br/>\n          <small className=\"text-muted\">\n          {this.renderParent()}\n          {this.renderChildren()}\n          </small>\n          </CardText>\n        </CardBody>\n        <CardBody>\n          <CardText>\n          <small className=\"text-muted\">\n            <b>Modified Date: </b>{this.state.Mod_date} {' '}\n            <b>Page Size: </b>{this.state.Page_size}\n          </small>\n          </CardText>\n        </CardBody>\n      </Card>\n      </a>\n    );\n  }\n}\n// {(this.state.Parents != [])?return(<b> Parents: </b>):}\n// {\n//   this.state.Parents.map((link, i) => {\n//     return(<div>{link}<br/></div>)\n//   })\n// }\n\nexport default ResultCard;\n","import React, { Component } from 'react';\nimport ResultCard from './ResultCard';\nimport '../styles/Results.css';\n\nconst config = require('../config/server');\nconst axios = require('axios');\n\nclass Results extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {query:\"\", results: [], terms: []}\n  }\n  componentDidMount (props) {\n    this.setState({query: this.props.query});\n    this.getResults(this.props.query);\n  }\n\n  getResults = (query) => {\n    this.setState({results: [], query: query});\n    axios({\n      method: 'post',\n      url: config.address+'query',\n      data: {\n        Query: query\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((response) => {\n      var filtered = response.data.filter(function (el) {\n        return el.Url != \"\";\n      });\n\n\t\t\tvar regex = /\".*?\"/g;\n\t\t\tvar oldQuery = this.state.query;\n\t\t\tvar phrases = this.state.query.match(regex);\n\t\t\tlet pLen = !phrases ? 0 : phrases.length;\n\t\t\tvar terms = [];\n\t\t\tfor(let i=0; i < pLen; i++) {\n\t\t\t\toldQuery = oldQuery.replace(phrases[i], \"\");\n\t\t\t\tphrases[i] = phrases[i].slice(1, -1);\n\t\t\t\tif(phrases[i].length !== 0) {\n\t\t\t\t\tterms.push(phrases[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet tokens = oldQuery.split(\" \");\n\t\t\tfor(let i=0; i < tokens.length; i++) {\n\t\t\t\tlet t = tokens[i].trim();\n\t\t\t\tif(t.length !== 0) {\n\t\t\t\t\tterms.push(t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.log(terms);\n      this.setState({query: query, results: filtered, terms: terms });\n    })\n    .catch((error) => {\n    });\n  }\n  render() {\n    return (\n      <div className=\"results\">\n      {\n        this.state.results.map((data, i) => {\n          return(\n            <ResultCard data={data} terms={this.state.terms}/>\n          );\n        }, this)\n      }\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","import {createBrowserHistory} from 'history';\n\nexport default createBrowserHistory();\n","import React, { Component } from 'react';\nimport Results from '../components/Results';\nimport history from '../utils/history';\nimport {Nav, Navbar, NavbarBrand, NavLink, NavItem, Form, Input} from 'reactstrap';\nimport '../styles/ResultsContainer.css';\n\nclass ResultsContainer extends Component {\n  constructor (props) {\n    super(props)\n    this.resultsElement = React.createRef();\n    if(typeof history.location.state !== 'undefined'){\n      this.state = {query: history.location.state.query, results:[]};\n    } else {\n      this.state = {query: props.query, results:[]};\n    }\n    // this.state = {query: props.query, results: []}\n  }\n  componentDidMount (props) {\n    if(typeof history.location.state !== 'undefined'){\n      this.setState({query: history.location.state.query});\n    } else {\n      this.setState({query: this.props.query});\n    }\n  }\n  handleChange = (ev) => {\n    this.setState({\n      query: ev.target.value\n    });\n  }\n  getResults = (ev) => {\n    ev.preventDefault();\n    this.resultsElement.current.getResults(this.state.query);\n  }\n  render() {\n    return (\n      <div>\n      <Navbar color=\"faded\" light className=\"header\" sticky={'top'}>\n      <NavbarBrand href='/'><b>Spaghetti</b></NavbarBrand>\n      <Nav className=\"mr-auto\" navbar>\n      <Form onSubmit={this.getResults}>\n        <Input id='searchbar' type=\"search\" className=\"searchbox--results\" placeholder=\"What would you like to search?\" defaultValue={this.state.query} onChange={this.handleChange}/>\n      </Form>\n      </Nav>\n      </Navbar>\n      <Results ref={this.resultsElement} query={this.state.query}/>\n      </div>\n    );\n  }\n}\n\nexport default ResultsContainer;\n","import React, { Component } from 'react';\nimport ResultsContainer from './ResultsContainer';\nimport '../styles/Main.css';\nimport { Form, Input, Button } from 'reactstrap';\n\nclass Main extends Component {\n  constructor () {\n    super()\n    this.state = {query: \"\", showResults: false}\n  }\n  componentDidMount () {\n  }\n  handleSearch = (ev) => {\n    // redirect to search + results page\n    // with this query\n    this.setState({showResults:true});\n  }\n  handleChange = (ev) => {\n    ev.preventDefault();\n    this.setState({\n      query: ev.target.value\n    });\n    console.log(this.state.query)\n  }\n  render() {\n    if(this.state.showResults) {\n      return (\n        <ResultsContainer query={this.state.query}/>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <div><h1>Hello,</h1>\n          <Form onSubmit={this.handleSearch}>\n            <Input type=\"search\" className=\"searchbox--main\" placeholder=\"What would you like to search?\"  bsSize=\"lg\" onChange={this.handleChange} />\n          </Form><br/>\n          <small className=\"text-muted\">\n            OR TRY <a href='/word-list'><Button outline color=\"primary\">Keyword Search</Button></a>\n          </small></div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Button, Container, Row, Col, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport history from '../utils/history'\nimport '../styles/WordList.css'\nconst axios = require('axios');\nconst config = require('../config/server');\n\nclass WordList extends Component {\n  constructor() {\n    super();\n    this.state = {\n\t\t\tdata: \"\",\n\t\t\tmaxRow: 15,\n\t\t\tmaxCol: 5,\n\t\t\tpaginationWinSize: 5,\n\t\t\tcurrPage: 1,\n\t\t\tcurrPageD: [],\n\t\t\tcurrPre: \"A\",\n\t\t\ttermList: [],\n\t\t};\n  }\n\n  componentDidMount(props) {\n\t\tlet currO = this;\n    axios.get(config.address+'wordlist/a').then(function(res) {\n\t\t\tlet temp = []\n\t\t\tfor(let i in res.data) {\n\t\t\t\tif(i >= currO.state.maxRow * currO.state.maxCol) break;\n\t\t\t\ttemp.push(res.data[i]);\n\t\t\t}\n      currO.setState({ data: res.data, currPageD: temp });\n    });\n  }\n\n  handleSubmit = () => {\n    console.log(this.state.termList.join(\" \"))\n    history.push(\n      '/query',\n      {query: this.state.termList.join(\" \")}\n    );\n    document.location.reload(true)\n  }\n\n\tupdateCurrData(pre) {\n\t\tlet currO = this;\n    axios.get(config.address+'wordlist/' + pre.toLowerCase()).then(function(res) {\n\t\t\tlet temp = []\n\t\t\tfor(let i in res.data) {\n\t\t\t\tif(i >= currO.state.maxRow * currO.state.maxCol) break;\n\t\t\t\ttemp.push(res.data[i]);\n\t\t\t}\n      currO.setState({ data: res.data, currPageD: temp, currPage: 1, currPre: pre });\n    });\n\t}\n\n\taddTermList(term) {\n\t\tif(!this.state.termList.includes(term)) {\n\t\t\tthis.setState({ termList: this.state.termList.concat([term]) });\n\t\t} else {\n\t\t\tthis.setState({ termList: this.state.termList.filter((x) => { return x !== term }) });\n\t\t}\n\t}\n\n\tgetCurrPageArr() {\n\t\tlet results = [];\n\t\tfor(let i=0; i < this.state.maxRow; i++) {\n\t\t\tlet children = [];\n\t\t\tfor(let j=0; j < this.state.maxCol; j++) {\n\t\t\t\tlet thisElement = this.state.currPageD[i*this.state.maxCol + j];\n\t\t\t\tchildren.push(\n\t\t\t\t\t<Col key={j}>\n\t\t\t\t\t\t<Button color=\"link\" onClick={this.addTermList.bind(this, thisElement)}>\n\t\t\t\t\t\t\t{thisElement}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t}\n\t\t\tresults.push(<Row key={i}>{children}</Row>);\n\t\t}\n\t\treturn results;\n\t}\n\n\tupdateCurrPageD(page) {\n\t\tlet newD = [];\n\t\tlet idx = (page-1) * this.state.maxRow * this.state.maxCol;\n\t\tfor(let i=0; i < this.state.maxCol * this.state.maxRow; i++) {\n\t\t\tif(idx + i >= this.state.data.length) break;\n\t\t\tnewD.push(this.state.data[idx+i]);\n\t\t}\n\t\tthis.setState({ currPageD: newD, currPage: page });\n\t}\n\n\tgetPagination() {\n\t\tlet inner = [];\n\t\tlet total = Math.ceil(this.state.data.length / (this.state.maxRow * this.state.maxCol));\n\t\tif(total <= 5) {\n\t\t\tfor(let i=0; i < total; i++) {\n\t\t\t\tinner.push(\n\t\t\t\t\t<PaginationItem key={i} active={this.state.currPage === i + 1}>\n\t\t\t\t\t\t<PaginationLink href=\"#\" onClick={this.updateCurrPageD.bind(this, i+1)}>\n\t\t\t\t\t\t\t{i+1}\n\t\t\t\t\t\t</PaginationLink>\n\t\t\t\t\t</PaginationItem>\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tlet start = this.state.currPage - Math.floor(this.state.paginationWinSize / 2);\n\t\t\tlet end = this.state.currPage + Math.floor(this.state.paginationWinSize / 2);\n\t\t\tif(start < 1) {\n\t\t\t\tend += 1 - start;\n\t\t\t\tstart = 1;\n\t\t\t}\n\t\t\tif(end > total) {\n\t\t\t\tstart -= end - total;\n\t\t\t\tend = total;\n\t\t\t}\n\t\t\tfor(let i = start; i <= end; i++) {\n\t\t\t\tinner.push(\n\t\t\t\t\t<PaginationItem key={i} active={this.state.currPage === i}>\n\t\t\t\t\t\t<PaginationLink href=\"#\" onClick={this.updateCurrPageD.bind(this, i)}>\n\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t</PaginationLink>\n\t\t\t\t\t</PaginationItem>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<Pagination aria-label=\"Page navigation example\" style={{justifyContent: \"right\"}}>\n\t\t\t\t<PaginationItem disabled={this.state.currPage === 1}>\n\t\t\t\t\t<PaginationLink first href=\"#\" onClick={this.updateCurrPageD.bind(this, 1)}/>\n\t\t\t\t</PaginationItem>\n\t\t\t\t<PaginationItem disabled={this.state.currPage === 1}>\n\t\t\t\t\t<PaginationLink previous href=\"#\" onClick={this.updateCurrPageD.bind(this, this.state.currPage - 1)}/>\n\t\t\t\t</PaginationItem>\n\t\t\t\t{inner}\n\t\t\t\t<PaginationItem disabled={this.state.currPage === total}>\n\t\t\t\t\t<PaginationLink next href=\"#\" onClick={this.updateCurrPageD.bind(this, this.state.currPage + 1)}/>\n\t\t\t\t</PaginationItem>\n\t\t\t\t<PaginationItem disabled={this.state.currPage === total}>\n\t\t\t\t\t<PaginationLink last href=\"#\" onClick={this.updateCurrPageD.bind(this, total)}/>\n\t\t\t\t</PaginationItem>\n\t\t\t</Pagination>\n\t\t);\n\t}\n\n  render() {\n\t\tconst preList = [\n\t\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n\t\t];\n\t\tlet items = [];\n\t\t\tfor(let i in preList[0]) {\n\t\t\t\titems.push(\n\t\t\t\t\t\t<Button key={i} block color={this.state.currPre === preList[0][i] ? \"secondary\" : \"info\"}\n\t\t\t\t\t\tdisabled={this.state.currPre === preList[0][i]}\n\t\t\t\t\t\tonClick={this.updateCurrData.bind(this, preList[0][i])}>\n\t\t\t\t\t\t\t{preList[0][i]}\n\t\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\t}\n\n    return (\n\t\t\t<div className=\"WordList\">\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n        <div className='alphabet'>\n\t\t\t    {items}\n        </div>\n\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\n\t\t\t    {this.getCurrPageArr()}\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n          <Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>Selected Terms: <br/>{\"[\" + this.state.termList.join(\", \") + \"]\"}</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Button color=\"primary\" onClick={this.handleSubmit} block>Search</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>{this.getPagination()}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<br/>\n\t\t\t  </Container>\n\t\t\t</div>\n    );\n  }\n}\n\nexport default WordList;\n","import React from \"react\";\nimport Main from \"./containers/Main\";\nimport ResultsContainer from \"./containers/ResultsContainer\";\nimport WordList from \"./containers/WordList\";\nimport { BrowserRouter as Router, Route, Link, Switch, withRouter } from \"react-router-dom\";\nimport history from './utils/history';\n\nfunction App() {\n  return (\n    <Router history={history}>\n    <Switch>\n        <Route path=\"/\" exact component={withRouter(Main)}/>\n        <Route path=\"/query\" exact component={withRouter(ResultsContainer)} />\n        <Route path=\"/word-list\" component={withRouter(WordList)} />\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}